load("@bazel_skylib//rules:native_binary.bzl", "native_binary")
load("@gazelle//:def.bzl", "gazelle")
load("@rules_pkg//pkg:install.bzl", "pkg_install")
load("@rules_pkg//pkg:mappings.bzl", "pkg_attributes", "pkg_filegroup", "pkg_files")
load("@rules_pkg//pkg:zip.bzl", "pkg_zip")
load("//:defs.bzl", "codeql_platform")

gazelle(
    name = "gazelle",
    extra_args = ["go/extractor"],
)

_gen_binaries = [
    "@rules_go//go",
    ":gazelle",
    "//go/extractor/cli/go-gen-dbscheme",
]

py_binary(
    name = "gen",
    srcs = ["gen.py"],
    args = ["$(rlocationpath %s)" % bin for bin in _gen_binaries],
    data = _gen_binaries,
    deps = ["@rules_python//python/runfiles"],
)

# this is an internal copy of the dbscheme to be used by extractor-pack
# this allows the extractor-pack target to be independent and up-to-date with respect to
# having run //go:gen to update the checked in files
genrule(
    name = "dbscheme",
    outs = ["go.dbscheme"],
    cmd = "$(execpath //go/extractor/cli/go-gen-dbscheme) $@",
    tools = ["//go/extractor/cli/go-gen-dbscheme"],
)

pkg_files(
    name = "resources",
    srcs = [
        "LICENSE",
        "codeql-extractor.yml",
        "ql/lib/go.dbscheme.stats",
        ":dbscheme",
    ],
)

pkg_filegroup(
    name = "extractor-pack-generic",
    srcs = [
        ":resources",
        "//go/codeql-tools",
        "//go/downgrades",
        "//go/extractor:tokenizer",
    ],
    visibility = ["//visibility:public"],
)

pkg_files(
    name = "extractor-pack-arch",
    srcs = [
        "//go/extractor/cli/go-autobuilder",
        "//go/extractor/cli/go-bootstrap",
        "//go/extractor/cli/go-build-runner",
        "//go/extractor/cli/go-extractor",
        "//go/extractor/cli/go-gen-dbscheme",
        "//go/extractor/cli/go-tokenizer",
    ],
    attributes = pkg_attributes(mode = "0755"),
    prefix = "tools/" + codeql_platform,
    visibility = ["//visibility:public"],
)

pkg_filegroup(
    name = "extractor-pack",
    srcs = [
        ":extractor-pack-arch",
        ":extractor-pack-generic",
    ],
    visibility = ["//visibility:public"],
)

pkg_install(
    name = "_extractor-pack-installer",
    srcs = [":extractor-pack"],
)

# rules_pkg installer is currently broken on Windows
# see https://github.com/bazelbuild/rules_pkg/issues/387
# for now, work around it using an archive
pkg_zip(
    name = "_extractor-pack-zip",
    srcs = [":extractor-pack"],
)

alias(
    name = "_create-extractor-pack-arg",
    actual = select({
        "@platforms//os:windows": ":_extractor-pack-zip",
        "//conditions:default": ":_extractor-pack-installer",
    }),
)

py_binary(
    name = "create-extractor-pack",
    srcs = ["create_extractor_pack.py"],
    args = ["$(rlocationpath :_create-extractor-pack-arg)"],
    data = [":_create-extractor-pack-arg"],
    main = "create_extractor_pack.py",
    deps = ["@rules_python//python/runfiles"],
)

native_binary(
    name = "gen-dbscheme",
    src = "//go/extractor/cli/go-gen-dbscheme",
    out = "go-gen-dbscheme",
    args = [
        "$$BUILD_WORKSPACE_DIRECTORY/go/ql/lib/go.dbscheme",
    ],
)
